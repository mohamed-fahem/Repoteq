@model Repoteq.ViewModel.Orders.EditOrderViewModel

@{
    ViewData["Title"] = "Edit";
}
<style>
    .form-group-material {
        position: relative;
        margin-bottom: 0px !important;
    }
</style>
<h1>Create</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <form asp-action="SaveEdit" id="add-order-form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="OrderId" />

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="OrderNumber" class="control-label"></label>
                        <input asp-for="OrderNumber" id="text-orderNumber" class="form-control" />
                        <span asp-validation-for="OrderNumber" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="CustomerName" class="control-label"></label>
                        <input asp-for="CustomerName" id="text-customerName" class="form-control" />
                        <span asp-validation-for="CustomerName" class="text-danger"></span>

                    </div>
                </div>
            </div>
            <br />
            <br />

            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Product</label>
                        <select asp-items="@Model.ListProducts" id="txt-product"
                                onchange="LoadProductPrice(value);" class="form-control">
                            <option value="" selected> Select Product</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Price</label>
                        <input type="number" id="text-price" disabled class="form-control" />
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Quantity</label>
                        <input type="number" id="txt-quantity" onkeyup="CalculateTotal()" class="form-control" />
                    </div>
                </div>


                <div class="col-md-2">
                    <div class="form-group">
                        <label>Total</label>
                        <input type="number" id="txt-total" class="form-control" disabled />
                    </div>
                </div>
                <div class="col-md-1">
                    <input type="button" id="add-item-btn" class="btn btn-primary" value="Add">
                    @*<input type="button" id="update-item-btn" onclick="BtnUpdate()" class="btn btn-primary" value="update">*@
                </div>

            </div>

            <hr />


            <div class="row">
                <div class="col-md-12">
                    <table class="table" id="items-table">
                        <thead>
                            <tr style="background-color:lightblue;">
                                <th>Product Id</th>
                                <th>Product Name</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderItemsList) {
                            <tr>
                                <td>
                                    @Html.DisplayFor(m =>item.ProductId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Product.ProductName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Quantity)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Total)
                                </td>
                                <td>
                                        <input type="button" onclick="BtnEdit()" class="btn btn-primary" value="Edit" />
                                     <input type="button" id="remove-item-btn" class="btn btn-danger" value="Remove" />
                                </td>

                               
                            </tr>
                            }
                        </tbody>
                    </table>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="total-sum-container">
                                <h4>Total Sum: <span id="total-sum"></span></h4>
                            </div>
                        </div>
                    </div>
                </div>

            </div>


            <br />
            <hr />
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    <input type="button" id="save-item-btn"
                           onclick="BtnSave()" class="btn btn-primary" value="Save">
                    <a href="#" class="btn btn-danger">Cancel</a>
                </div>
            </div>

        </form>
    </div>
</div>


@section Scripts {
    <script>


        function LoadProductPrice(prodId) {
            $.get(`/orders/getproductprice?productId=${prodId}`, function (res) {
                //alert(res);
                $('#text-price').val(res);
            });
        }

        function CalculateTotal() {
            var quantity = $('#txt-quantity').val();
            var price = $('#text-price').val();
            var total = quantity * price;
            $('#txt-total').val(total);
        }


        function updateTotalSum() {

            var totalSum = 0;

            var trs = $('#items-table tr');
            for (var i = 1; i < trs.length; i++) {
                var total = $(trs[i]).find('td:nth-child(5)').text();
                totalSum += parseFloat(total);
            }
            $('#total-sum').html(totalSum);
        }


        function RestAddForm() {


            // Clear the input fields
            $('#txt-product').val('');
            $('#text-price').val('');
            $('#txt-quantity').val('');
            $('#txt-total').val('');
            $('#add-item-btn').val("Add");

        }


        $(function () {

            $(document).on('click', '#add-item-btn', function (e) {
                e.preventDefault();


                var selectedProduct = $('#txt-product option:selected');
                var productId = selectedProduct.val();
                var productName = selectedProduct.text();
                var price = $('#text-price').val();
                var quantity = $('#txt-quantity').val();
                var total = price * quantity;


                // Create a new table row with the item details
                var newRow = $('<tr>');
                newRow.append('<td>' + productId + '</td>');
                newRow.append('<td>' + productName + '</td>');
                newRow.append('<td>' + price + '</td>');
                newRow.append('<td>' + quantity + '</td>');
                newRow.append('<td>' + total + '</td>');

                // Add edit and remove buttons to the row
                newRow.append('<td>' +
                    '<div class="form-group">' +
                    '<input type="button" id="edit-item-btn" class="btn btn-primary" value="Edit" />' +
                    '<input type="button" id="remove-item-btn" class="btn btn-danger" value="Remove" />' +
                    '</div>' + '</td></tr>'
                );




                if (this.value == "Save")  // edit
                {
                    // find row that contain order id.
                    var trs = $('#items-table tr');
                    for (var i = 1; i < trs.length; i++) {
                        var trProdId = $(trs[i]).find('td:nth-child(1)').text();
                        if (trProdId == productId) {
                            $(trs[i]).replaceWith(newRow);
                            break;
                        }
                    }


                    // create new row.
                    // replace tr with new row.
                    // update.
                    updateTotalSum();

                    // rest form
                    RestAddForm();

                } else {

                    // Check if a product is selected
                    if (selectedProduct.val() === '') {
                        alert('Please select a product.');
                        return;
                    }

                    // Validate price and quantity
                    if (price <= 0 || quantity <= 0) {
                        alert('Price and quantity must be greater than 0.');
                        return;
                    }

                    // Check if product is already added
                    var isProductAdded = false;
                    $('table tbody tr').each(function () {
                        var existingProductName = $(this).find('td:nth-child(2)').text();
                        if (existingProductName === productName) {
                            isProductAdded = true;
                            return false; // Exit the loop
                        }
                    });

                    if (isProductAdded) {
                        alert('Product is already added.');
                        return;
                    }


                    if (productName && price && quantity && total) {

                        // Append the new row to the table body
                        $('table tbody').append(newRow);
                        updateTotalSum();

                        RestAddForm();


                    }
                }
            });

            $(document).on('click', '#edit-item-btn', function () {

                var row = $(this).closest('tr');
                var productId = $(row).find('td:nth-child(1)').text();
                var productName = $(row).find('td:nth-child(2)').text();
                var price = $(row).find('td:nth-child(3)').text();
                var quantity = $(row).find('td:nth-child(4)').text();

                // Bind the order item to the adding div
                $('#txt-product').val(productId);
                $('#text-price').val(price);
                $('#txt-quantity').val(quantity);
                $('#txt-total').val(price * quantity);


                $('#add-item-btn').val("Save");
            });



            $(document).on('click', '#remove-item-btn', function (e) {
                e.preventDefault();
                $(this).closest('tr').remove();
                updateTotalSum();
            });


        })

        function BtnEdit(){
            debugger;
            var row = $(this).closest('#items-table').children('tr:eq(1)');
            var productId = parseFloat($('td:eq(0)').text());
            var productName = $('td:eq(1)').text();
            var price = parseFloat($('td:eq(2)').text());
            var quantity = parseFloat($('td:eq(3)').text());

            // Bind the order item to the adding div
            $('#txt-product').val(productId);
            $('#text-price').val(price);
            $('#txt-quantity').val(quantity);
            $('#txt-total').val(price * quantity);

            $('#add-item-btn').val("Save");

            if ($('#add-item-btn').val() == "Save") {  
                var newRow = $('<tr><td>' + productId + '</td><td>' + productName + '</td><td>' + price + '</td><td>' + quantity + '</td></tr>');

                var rows = $('#items-table').find('tr');  // Get all rows in the table
                for (var i = 1; i < rows.length; i++) {
                    var trProdId = $(rows[i]).find('td:nth-child(1)').text();
                    if (trProdId == productId) {
                        $(rows[i]).replaceWith(newRow);
                        break;
                    }
                }
                updateTotalSum();
            }
        }

        function BtnSave() {


            var data;
            var items = [];

            var rows = $('#items-table tr');
            for (var i = 1; i < rows.length; i++) {

                var prodId = $($(rows[i]).find('td:eq(0)')).text();
                var price = $($(rows[i]).find('td:eq(2)')).text();
                var quantity = $($(rows[i]).find('td:eq(3)')).text();


                // Create an object to hold the data for the current row
                var rowObject = {
                    'ProductId': prodId,
                    'Price': price,
                    'Quantity': quantity,
                };

                // Add the row object to the array
                items.push(rowObject);
            }

            var customerName = $('#text-customerName').val();
            var orderCode = $('#text-orderNumber').val();
            var OrderId = $('#OrderId').val();


            data = {
                'OrderNumber': orderCode,
                'CustomerName': customerName,
                'OrderId': OrderId,
                'Items': items
            };
            //var strData = JSON.stringify(data);

            // data = `OrderNumber=${orderCode}&CustomerName=${customerName}&Items=${items}`;

            SubmitSave(data);
        }

        function SubmitSave(data) {

            $.ajax({
                url: '/Orders/SaveEdit',
                type: 'POST',
                data: data,
                success: function (data) {
                    alert(JSON.stringify(data));
                    window.location = '/orders';
                }

            });




        }






    </script>
}
