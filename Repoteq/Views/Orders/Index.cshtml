@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IPagedList<Repoteq.Models.Order>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>



<form class="d-flex" asp-action="Search" asp-controller="Orders" method="get">

    <div class="form-group">
        <label for="OrderNumber">Order Number</label>
        <input class="form-control me-sm-2" id="OrderNumber" name="OrderNumber" type="number" placeholder="Order Number">
    </div>

    <div class="form-group">
        <label for="CustomerName">Customer Name</label>
        <input class="form-control me-sm-2" id="CustomerName" name="CustomerName" type="text" placeholder="Customer Name">
    </div>

    <div class="form-group">
        <label for="Total">Total</label>
        <input class="form-control me-sm-2" id="Total" name="Total" type="number" placeholder="Total">
    </div>

    <div class="form-group">
        <label for="FromDate">From Date</label>
        <input class="form-control me-sm-2 datepicker" id="FromDate" name="FromDate" type="date">
    </div>

    <div class="form-group">
        <label for="ToDate">To Date</label>
        <input class="form-control me-sm-2 datepicker" id="ToDate" name="ToDate" type="date" placeholder="To Date">
    </div>

    <button class="btn btn-primary my-2 my-sm-0" type="submit">Search</button>
</form>

<p>
    <a asp-action="Create" class="btn btn-primary my-2 my-sm-0">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                OrderCode
            </th>
            <th>
                CustomerName
            </th>
            <th>
                Total
            </th>
            <th>
                Date
            </th>
            <th>
                Action
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() > 0)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Total)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.OrderId" class="btn btn-outline-primary">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.OrderId" class="btn btn-outline-info">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.OrderId" class="btn btn-outline-danger">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6">No data found.</td>
            </tr>
        }
    </tbody>
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }),
    new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
    {
        DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
    })

@section Scripts {
    <script>
        $(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });

        $(function () {
            $('.datepicker').datepicker({
                format: 'yyyy-mm-dd',
                autoclose: true
            });
        });

        $(function () {
            
            var searchParams = new URLSearchParams(window.location.search);

            // Set the values of the corresponding textboxes
            $('#OrderNumber').val(searchParams.get('OrderNumber'));
            $('#CustomerName').val(searchParams.get('CustomerName'));
            $('#Total').val(searchParams.get('Total'));
            $('#FromDate').val(searchParams.get('FromDate'));
            $('#ToDate').val(searchParams.get('ToDate'));

            // Watch for changes in the textboxes
            $('.form-control').on('input', function () {
                // Check if all textboxes are empty
                var allEmpty = true;
                $('.form-control').each(function () {
                    if ($(this).val().trim() !== '') {
                        allEmpty = false;
                        return false; 
                    }
                });

                // If all textboxes are empty, reload the page without any search parameters and with the first page of pagination
                if (allEmpty) {
                    window.location.href = window.location.origin + '/Orders?page=1';
                }
            });
        });
    </script>
}