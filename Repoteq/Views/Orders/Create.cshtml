@model Repoteq.ViewModel.Orders.AddOrderViewModel

@{
    ViewData["Title"] = "Create";
}
<style>
    .form-group-material {
        position: relative;
        margin-bottom: 0px !important;
    }
</style>
<h1>Create</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="OrderNumber" class="control-label"></label>
                        <input asp-for="OrderNumber" class="form-control" />
                        <span asp-validation-for="OrderNumber" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="CustomerName" class="control-label"></label>
                        <input asp-for="CustomerName" class="form-control" />
                        <span asp-validation-for="CustomerName" class="text-danger"></span>

                    </div>
                </div>
            </div>
            <br />
            <br />

            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Product</label>
                        <select asp-items="@Model.ListProducts" id="txt-product"
                                onchange="LoadProductPrice(value);" class="form-control">
                            <option value="" selected> Select Product</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Price</label>
                        <input type="number" id="text-price" disabled class="form-control" />
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Quantity</label>
                        <input type="number" id="txt-quantity" onkeyup="CalculateTotal()" class="form-control" />
                    </div>
                </div>


                <div class="col-md-2">
                    <div class="form-group">
                        <label>Total</label>
                        <input type="number" id="txt-total" class="form-control" disabled />
                    </div>
                </div>
                <div class="col-md-1">
                    <input type="button" id="add-item-btn" class="btn btn-primary" value="Add">
                </div>

            </div>

            <hr />


            <div class="row">
                <div class="col-md-12">
                    <table class="table">
                        <thead>
                            <tr style="background-color:lightblue;">
                                <th>#</th>
                                <th>Product Name</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @*<tr>
                            <td>1</td>
                            <td>prod_1</td>
                            <td>100</td>
                            <td>1</td>
                            <td>100</td>
                            <td>
                            <div class="form-group">
                            <a href="#" class="btn btn-primary btn-sm"> Edit</a>
                            <a href="#" class="btn btn-danger btn-sm"> Remove</a>
                            </div>
                            </td>
                            </tr>*@
                        </tbody>
                    </table>
                </div>

            </div>


            <br />
            <hr />
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    <a href="#" class="btn btn-primary ">Save</a>
                    <a href="#" class="btn btn-danger">Cancel</a>
                </div>
            </div>

        </form>
    </div>
</div>




@section Scripts {
    <script>


        function LoadProductPrice(prodId) {

            $.get(`/orders/getproductprice?productId=${prodId}`, function (res) {
                //alert(res);
                $('#text-price').val(res);
            });
        }

        function CalculateTotal() {
            var quantity = $('#txt-quantity').val();
            var price = $('#text-price').val();
            var total = quantity * price;
            $('#txt-total').val(total);
        }

        $(function () {
            var itemIndex = 1;
            $(document).on('click', '#add-item-btn', function (e) {
                e.preventDefault();
                var selectedProduct = $('#txt-product option:selected');
                var productName = selectedProduct.text();
                var price = $('#text-price').val();
                var quantity = $('#txt-quantity').val();
                var total = price * quantity;

                // Check if a product is selected
                if (selectedProduct.val() === '') {
                    alert('Please select a product.');
                    return;
                }

                // Validate price and quantity
                if (price <= 0 || quantity <= 0) {
                    alert('Price and quantity must be greater than 0.');
                    return;
                }

                // Check if product is already added
                var isProductAdded = false;
                $('table tbody tr').each(function () {
                    var existingProductName = $(this).find('td:nth-child(2)').text();
                    if (existingProductName === productName) {
                        isProductAdded = true;
                        return false; // Exit the loop
                    }
                });

                if (isProductAdded) {
                    alert('Product is already added.');
                    return;
                }

                
                if (productName && price && quantity && total) {
                    // Create a new table row with the item details
                    var newRow = $('<tr>');
                    newRow.append('<td>' + itemIndex + '</td>');
                    newRow.append('<td>' + productName + '</td>');
                    newRow.append('<td>' + price + '</td>');
                    newRow.append('<td>' + quantity + '</td>');
                    newRow.append('<td>' + total + '</td>');

                    // Add edit and remove buttons to the row
                    newRow.append('<td>' +
                        '<div class="form-group">' +
                        '<input type="button" id="edit-item-btn" class="btn btn-primary" value="Edit">' +
                        '<input type="button" id="remove-item-btn" class="btn btn-danger" value="Remove">' +
                        '</div>' +
                        '</td>');

                    // Append the new row to the table body
                    $('table tbody').append(newRow);

                    // Increment the item index
                    itemIndex++;
                    $('table tbody').append(newRow);
                }

                $(document).on('click', '#edit-item-btn', function () {
                    var row = $(this).closest('tr');
                    var productName = row.find('td:nth-child(1)').text();
                    var price = row.find('td:eq(3)').text();
                    var quantity = row.find('td:eq(4)').text();


                    $('#txt-product').val(productName);
                    $('#text-price').val(price);
                    $('#txt-quantity').val(quantity);
                    CalculateTotal();

                })

            });
        })

    </script>
}


@*@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}*@
